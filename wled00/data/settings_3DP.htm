<!DOCTYPE html>
<html lang="en">

<head>
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
	<meta charset="utf-8">
	<title>3D Printer Setup</title>
	<script>
		var d = document;
		var loc = false, locip, locproto = "http:";
		function getURL(path) {
			return (loc ? locproto + "//" + locip : "") + path;
		}
		function B() { window.open("../settings", "_self"); }
		function H() { window.open("https://kno.wled.ge/features/settings/#wifi-settings"); }
		function gId(c) { return d.getElementById(c); }
		function cE(e) { return d.createElement(e); }
		function so(id, e, v) { gId(id).style.display = e.value == v ? 'block' : 'none'; }
		function sp(e) { so('blp', e, '0'); so('evt', e, '0'); so('crp', e, '1') }
		function pp(pj) {
			delete pj["0"];
			var arr = Object.entries(pJson);
			var cn = "";
			for (var key of (arr || [])) {
				let i = parseInt(key[0]);
				cn += `<option value="${i}">${key[1].n}</option>`
			}
			gId('eoff').innerHTML = cn;
			gId('econ').innerHTML = cn;
			gId('eidl').innerHTML = cn;
			gId('estr').innerHTML = cn;
			gId('ebht').innerHTML = cn;
			gId('enht').innerHTML = cn;
			gId('ehom').innerHTML = cn;
			gId('epro').innerHTML = cn;
			gId('epus').innerHTML = cn;
			gId('eerr').innerHTML = cn;
			gId('ecoo').innerHTML = cn;
			S();
		}
		function lp() {
			pJson = JSON.parse(localStorage.getItem("wledP"));
			if (!pJson) {
				fetch(getURL('/presets.json'), {
					method: 'get'
				})
					.then(res => {
						if (res.status == "404") return { "0": {} };
						//if (!res.ok) showErrorToast();
						return res.json();
					})
					.then(json => {
						pJson = json;
						pJson["0"] = {};
						pp(pJson);
						localStorage.setItem("wledP", JSON.stringify(pJson));
					})
			} else {
				pp(pJson);
			}
		}

		function os(form) {
			this.Sf.MD.value = 'device\\' + this.Sf.MD.value;
		}
		function loadJS(FILE_URL, async = true) {
			let scE = cE("script");
			scE.setAttribute("src", FILE_URL);
			scE.setAttribute("type", "text/javascript");
			scE.setAttribute("async", async);
			d.body.appendChild(scE);
			// success event
			scE.addEventListener("load", () => {
				//console.log("File loaded");
				GetV();
				if (d.Sf.MD.value) d.Sf.MD.value =d.Sf.MD.value.replace('device/',''); 
			});
			// error event
			scE.addEventListener("error", (ev) => {
				console.log("Error on loading file", ev);
				alert("Loading of configuration script failed.\nIncomplete page data!");
			});
		}
		function S() {
			let l = window.location;
			if (l.protocol == "file:") {
				loc = true;
				locip = localStorage.getItem('locIp');
				if (!locip) {
					locip = prompt("File Mode. Please enter WLED IP!");
					localStorage.setItem('locIp', locip);
				}
			} else {
				// detect reverse proxy
				let path = l.pathname;
				let paths = path.slice(1, path.endsWith('/') ? -1 : undefined).split("/");
				if (paths.length > 2) {
					locproto = l.protocol;
					loc = true;
					locip = l.hostname + (l.port ? ":" + l.port : "") + "/" + paths[0];
				}
			}
			loadJS(getURL('/settings/s.js?p=11'), false);	// If we set async false, file is loaded and executed, then next statement is processed
			if (loc) d.Sf.action = getURL('/settings/3dp');
		}

	</script>
	<style>
		@import url("style.css");
		.r {
			display: inline-grid;
			width: 150px;
			text-align: right;
		}
	</style>
</head>

<body onload="lp()">
	<form id="form_s" name="Sf" method="post" onsubmit="os(this)">
		<div class="toprow">
			<div class="helpB"><button type="button" onclick="H()">?</button></div>
			<button type="button" onclick="B()">Back</button><button type="submit">Save & Connect</button>
			<hr>
		</div>
		<h2>Please select a printer</h2>
		<select onchange="sp(this)" name="PT">
			<option value="0">Bambulab</option>
			<option value="1">Creality Marlin</option>
		</select><br>
		<div id='blp'>
			Printer's IP:<br>
			<input name="MS" type="text" required minlength="7" maxlength="15" size="15" placeholder="xxx.xxx.xxx.xxx"
				pattern="^((\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.){3}(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$"><br>
			Printer's Port:<br>
			<input name="MQPORT" type="number" required minlength="4" maxlength="4" size="4"><br>
			<input hidden type="text" name="MQUSER" value='bblp'>
			<input hidden type="text" name="MQCID" value='WELD-BLLED'>

			Access Code: <br><input type="text" required name="MQPASS"><br>
			Serial #: <br><input type="text" required name="MD"><br>
		</div>
		<div id='crp' style="display: none;">
			<h3>Coming Very Soon</h3>
		</div>
		<div id='evt'>
			<h3>Event Mappings</h3>
			<span class="r">Turned Off:</span><select id='eoff' name='EOFF'></select><br>
			<span class="r">Connected:</span> <select id='econ' name='ECON'></select><br>
			<span class="r">Idle:</span> <select id='eidl' name='EIDL'></select><br>
			<span class="r">Print Starting:</span> <select id='estr' name='ESTR'></select><br>
			<span class="r">Bed Heating:</span> <select id='ebht' name='EBHT'></select><br>
			<span class="r">Nozzle Heating:</span> <select id='enht' name='ENHT'></select><br>
			<span class="r">Homing:</span> <select id='ehom' name='EHOM'></select><br>
			<span class="r">Printing Progress:</span> <select id='epro' name='EPRO'></select><br>
			<span class="r">Pause:</span> <select id='epus' name='EPUS'></select><br>
			<span class="r">Error:</span> <select id='eerr' name='EERR'></select><br>
			<span class="r">Cooling:</span> <select id='ecoo' name='ECOO'></select>
		</div>
		<hr>
		<button type="button" onclick="B()">Back</button><button type="submit">Save & Connect</button>
	</form>
</body>

</html>